Vorgehensweise Anpassung Steuerung geklonter Systeme. Wir benötigen für unsere Controller ein paar anpassungen da diese immer geklonte systeme von dem ersten original system ist. 

Das ganze soll interaktiv über die Tastatureingabe und das Terminal ausgabe passieren.

Bevor wir beginnen muss der Nutzer als erstes den gewünschten Hostname defieren. (Gleich Gerätenummer).

Diese Hostname besteht aus den Nummern 924 + die Indexnummer
Also als Beispiel 9240001 oder 9240002 etc.
Die eingabe des Hostnamens sollte durch den Nutzer passieren. 

Hosts anpassen


    sudo nano /etc/hosts

    Finde die Zeile, die mit 127.0.0.1 beginnt, und ändere den alten Hostnamen am Ende dieser Zeile in den neuen Hostnamen. Wenn es eine Zeile mit 127.0.1.1 gibt, ändere auch hier den Hostnamen entsprechend.
    Die Zeilen könnten vorher so aussehen:
            127.0.0.1       localhost
            127.0.1.1       9240002

            Und nach der Änderung so:
            127.0.0.1       localhost
            127.0.1.1       924“index"

    Speichere die Datei und schließe den Editor.



Danach muss die YAML Datei angepasst werden
    sudo nano /etc/netplan/00-installer-config.yaml
    network:
    version: 2
    ethernets:
        eno1:
        dhcp4: no
        addresses:
            - 192.168.100.100/24
        gateway4: 192.168.100.1
        nameservers:
            addresses: [8.8.8.8, 8.8.4.4]
        enp2s0:
        dhcp4: true


Als nächstes passen wir die TB-EDGE configuration an. 

    sudo nano /etc/tb-edge/conf/tb-edge.conf

    Dort müssen wir diesen Eintrag in diesen ändern:
        # UNCOMMENT NEXT LINES IF YOU CHANGED DEFAULT CLOUD RPC HOST/PORT SETTINGS:
        # export CLOUD_RPC_HOST=PUT_YOUR_CLOUD_IP
        # export CLOUD_RPC_PORT=7070
        In diesen
        # UNCOMMENT NEXT LINES IF YOU CHANGED DEFAULT CLOUD RPC HOST/PORT SETTINGS:
        export CLOUD_RPC_HOST=146.190.179.185
        export CLOUD_RPC_PORT=7070


    Dann müssen wir per Tastatureingabe die Eingabe für die Zwei Zeilen abfragen für den KEY und SECRET. Gut wäre wenn wir die eingabe doppelt prüfen, das heist der nutzer muss es zwei mal eingeben damit es sicher ist das der richtige Datenwert übergeben würde. :
        # UNCOMMENT NEXT LINES AND PUT YOUR CLOUD CONNECTION SETTINGS:
        # export CLOUD_ROUTING_KEY=PUT_YOUR_EDGE_KEY_HERE
        # export CLOUD_ROUTING_SECRET=PUT_YOUR_EDGE_SECRET_HERE
    In das hier:
        # UNCOMMENT NEXT LINES AND PUT YOUR CLOUD CONNECTION SETTINGS:
        export CLOUD_ROUTING_KEY="aus tastatureingabe"
        export CLOUD_ROUTING_SECRET="aus tastatureingabe"

    Und zuletzt noch das hier:
        UNCOMMENT NEXT LINES IF YOU HAVE CHANGED DEFAULT POSTGRESQL DATASOURCE SETTINGS:
        # export SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/tb_edge
        # export SPRING_DATASOURCE_USERNAME=postgres
        # export SPRING_DATASOURCE_PASSWORD=PUT_YOUR_POSTGRESQL_PASSWORD_HERE

    In das hier: 
        UNCOMMENT NEXT LINES IF YOU HAVE CHANGED DEFAULT POSTGRESQL DATASOURCE SETTINGS:
        # export SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/owipex_db
        # export SPRING_DATASOURCE_USERNAME=postgres
        # export SPRING_DATASOURCE_PASSWORD="tastatureingabe(doppelt)"

Dann passen wir noch die configurationsdatei für unser Script an. 
    sudo nano /home/owipex_adm/owipex-sps/.env

    Dort passen wir den wert an: 
        THINGSBOARD_ACCESS_TOKEN=WbXsPs2 + "Hostname" (also zum Beispiel 9240001. Das würde dann den ACCESS Token WbXsPs9240001 ergeben.)
    Datei abspeichern.

Dann müssen wir noch die Configuration von dem Gateway anpassen. 

    sudo nano /etc/thingsboard-gateway/config/tb_gateway.json 

    Dort müssen wir den eintrag 
        "host": "64.226.74.165"

    In 
        "host": "146.190.179.185"
    ändern. 

    Und 
        "accessToken": "v3Namzni2ieVMTokdmVW"
    In 
        "accessToken": "WbXgAAte2 + Hostname" also als beispiel WbXgAAte29240001

Dann müssen wir noch den alten Service abschalten: 
    sudo systemctl disable h2o_watchdog.service

Und den neuen installieren, hier mein altes skript. Können wir aber auch direkt implementieren statt das script extra zu starten. :
    #!/bin/bash

    # Konfigurationsvariablen
    SERVICE_NAME=powerWatchdog
    USER=owipex_adm
    WORKING_DIRECTORY=/home/owipex_adm/owipex-sps
    SCRIPT_PATH=/home/owipex_adm/owipex-sps/powerWatchdog.py

    # Erstellen der Systemd-Service-Datei
    echo "Erstelle Systemd-Service-Datei für $SERVICE_NAME..."
    cat <<EOF | sudo tee /etc/systemd/system/$SERVICE_NAME.service > /dev/null
    [Unit]
    Description=Power Watchdog Service
    After=network.target

    [Service]
    Type=simple
    User=$USER
    WorkingDirectory=$WORKING_DIRECTORY
    ExecStart=/usr/bin/python3 $SCRIPT_PATH
    Restart=on-failure
    RestartSec=10

    [Install]
    WantedBy=multi-user.target
    EOF

    # Systemd informieren, dass eine neue Service-Datei vorhanden ist
    echo "Lade Systemd-Konfiguration neu..."
    sudo systemctl daemon-reload

    # Den Service aktivieren, damit er beim Systemstart ausgeführt wird
    echo "Aktiviere $SERVICE_NAME Service..."
    sudo systemctl enable $SERVICE_NAME.service

    # Den Service starten
    echo "Starte $SERVICE_NAME Service..."
    sudo systemctl start $SERVICE_NAME.service

    echo "$SERVICE_NAME Service erfolgreich eingerichtet und gestartet."